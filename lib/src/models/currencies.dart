/// Base class for the currency classes.
/// `Currencies` and `CryptoCurrencies` can be used for
/// explicit values while `CustomCurrency` is used for
/// non standard ones.
abstract class BaseCurrency {
  String getCode();
}

enum Currencies implements BaseCurrency {
  afn('afn'),
  eur('eur'),
  all('all'),
  dzd('dzd'),
  usd('usd'),
  aoa('aoa'),
  xcd('xcd'),
  ars('ars'),
  amd('amd'),
  awg('awg'),
  aud('aud'),
  azn('azn'),
  bsd('bsd'),
  bhd('bhd'),
  bdt('bdt'),
  bbd('bbd'),
  byn('byn'),
  bzd('bzd'),
  xof('xof'),
  bmd('bmd'),
  inr('inr'),
  btn('btn'),
  bob('bob'),
  bov('bov'),
  bam('bam'),
  bwp('bwp'),
  nok('nok'),
  brl('brl'),
  bnd('bnd'),
  bgn('bgn'),
  bif('bif'),
  cve('cve'),
  khr('khr'),
  xaf('xaf'),
  cad('cad'),
  kyd('kyd'),
  clp('clp'),
  clf('clf'),
  cny('cny'),
  cop('cop'),
  cou('cou'),
  kmf('kmf'),
  cdf('cdf'),
  nzd('nzd'),
  crc('crc'),
  cup('cup'),
  cuc('cuc'),
  ang('ang'),
  czk('czk'),
  dkk('dkk'),
  djf('djf'),
  dop('dop'),
  egp('egp'),
  svc('svc'),
  ern('ern'),
  szl('szl'),
  etb('etb'),
  fkp('fkp'),
  fjd('fjd'),
  xpf('xpf'),
  gmd('gmd'),
  gel('gel'),
  ghs('ghs'),
  gip('gip'),
  gtq('gtq'),
  gbp('gbp'),
  gnf('gnf'),
  gyd('gyd'),
  htg('htg'),
  hnl('hnl'),
  hkd('hkd'),
  huf('huf'),
  isk('isk'),
  idr('idr'),
  xdr('xdr'),
  irr('irr'),
  iqd('iqd'),
  ils('ils'),
  jmd('jmd'),
  jpy('jpy'),
  jod('jod'),
  kzt('kzt'),
  kes('kes'),
  kpw('kpw'),
  krw('krw'),
  kwd('kwd'),
  kgs('kgs'),
  lak('lak'),
  lbp('lbp'),
  lsl('lsl'),
  zar('zar'),
  lrd('lrd'),
  lyd('lyd'),
  chf('chf'),
  mop('mop'),
  mkd('mkd'),
  mga('mga'),
  mwk('mwk'),
  myr('myr'),
  mvr('mvr'),
  mru('mru'),
  mur('mur'),
  xua('xua'),
  mxn('mxn'),
  mxv('mxv'),
  mdl('mdl'),
  mnt('mnt'),
  mad('mad'),
  mzn('mzn'),
  mmk('mmk'),
  nad('nad'),
  npr('npr'),
  nio('nio'),
  ngn('ngn'),
  omr('omr'),
  pkr('pkr'),
  pab('pab'),
  pgk('pgk'),
  pyg('pyg'),
  pen('pen'),
  php('php'),
  pln('pln'),
  qar('qar'),
  ron('ron'),
  rub('rub'),
  rwf('rwf'),
  shp('shp'),
  wst('wst'),
  stn('stn'),
  sar('sar'),
  rsd('rsd'),
  scr('scr'),
  sll('sll'),
  sle('sle'),
  sgd('sgd'),
  xsu('xsu'),
  sbd('sbd'),
  sos('sos'),
  ssp('ssp'),
  lkr('lkr'),
  sdg('sdg'),
  srd('srd'),
  sek('sek'),
  che('che'),
  chw('chw'),
  syp('syp'),
  twd('twd'),
  tjs('tjs'),
  tzs('tzs'),
  thb('thb'),
  top('top'),
  ttd('ttd'),
  tnd('tnd'),
  tmt('tmt'),
  ugx('ugx'),
  uah('uah'),
  aed('aed'),
  usn('usn'),
  uyu('uyu'),
  uyi('uyi'),
  uyw('uyw'),
  uzs('uzs'),
  vuv('vuv'),
  ves('ves'),
  ved('ved'),
  vnd('vnd'),
  yer('yer'),
  zmw('zmw'),
  zwl('zwl'),
  xba('xba'),
  xbb('xbb'),
  xbc('xbc'),
  xbd('xbd'),
  xts('xts'),
  xxx('xxx'),
  xau('xau'),
  xpd('xpd'),
  xpt('xpt'),
  xag('xag');
  const Currencies(this.code);
  final String code;
  
  @override
  String getCode() {
    return code;
  }
}

enum CryptoCurrencies implements BaseCurrency {
  btc('btc'),
  eth('eth'),
  ltc('ltc'),
  bch('bch'),
  bnb('bnb'),
  eos('eos'),
  xrp('xrp'),
  xlm('xlm'),
  link('link'),
  dot('dot'),
  yfi('yfi'),
  usd('usd'),
  aed('aed'),
  ars('ars'),
  aud('aud'),
  bdt('bdt'),
  bhd('bhd'),
  bmd('bmd'),
  brl('brl'),
  cad('cad'),
  chf('chf'),
  clp('clp'),
  cny('cny'),
  czk('czk'),
  dkk('dkk'),
  eur('eur'),
  gbp('gbp'),
  hkd('hkd'),
  huf('huf'),
  idr('idr'),
  ils('ils'),
  inr('inr'),
  jpy('jpy'),
  krw('krw'),
  kwd('kwd'),
  lkr('lkr'),
  mmk('mmk'),
  mxn('mxn'),
  myr('myr'),
  ngn('ngn'),
  nok('nok'),
  nzd('nzd'),
  php('php'),
  pkr('pkr'),
  pln('pln'),
  rub('rub'),
  sar('sar'),
  sek('sek'),
  sgd('sgd'),
  thb('thb'),
  twd('twd'),
  uah('uah'),
  vef('vef'),
  vnd('vnd'),
  vrsc('vrsc'),
  zar('zar'),
  xdr('xdr'),
  xag('xag'),
  xau('xau'),
  bits('bits'),
  sats('sats');

  const CryptoCurrencies(this.code);
  final String code;
  
  @override
  String getCode() {
    return code;
  }
}

class CustomCurrency implements BaseCurrency {
  String? _code;

  CustomCurrency.from(String code) {
    _code = code;
  }
  
  @override
  String getCode() {
    return _code ?? '';
  }
}